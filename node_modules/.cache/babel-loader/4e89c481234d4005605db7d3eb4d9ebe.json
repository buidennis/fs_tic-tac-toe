{"ast":null,"code":"var _jsxFileName = \"/home/oem/Desktop/tutorials/tic-tac-toe/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  handleClick(i) {\n    const squareMap = this.state.squareMap.slice();\n\n    if (calculateWinner(squareMap) || squareMap[i]) {\n      return;\n    }\n\n    squareMap[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squareMap: squareMap,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squareMap[i],\n      onClick: () => this.props.Click(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squareMap);\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squareMap: Array(9).fill(null)\n      }],\n      xIsNext: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 97,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/home/oem/Desktop/tutorials/tic-tac-toe/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","handleClick","i","squareMap","state","slice","calculateWinner","xIsNext","setState","renderSquare","Click","render","winner","status","Game","constructor","history","Array","fill","document","getElementById","squares","lines","length","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props){\n    return(\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n    handleClick(i){\n        const squareMap = this.state.squareMap.slice();\n        if( calculateWinner(squareMap) || squareMap[i]){\n            return;\n        }\n        squareMap[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            squareMap: squareMap,\n            xIsNext: !this.state.xIsNext\n        });\n    }\n\n    renderSquare(i) {\n        return( \n            <Square\n            value={this.props.squareMap[i]} \n            onClick={() => this.props.Click(i)}\n            />\n        );\n    }\n\n    render() {\n        const winner = calculateWinner(this.state.squareMap);\n        let status;\n        if(winner){\n            status = 'Winner: ' + winner;\n        }\n        else{\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n    \n\n        return (\n            <div>\n            <div className=\"status\">{status}</div>\n            <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n            </div>\n            <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n            </div>\n            <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n            </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            history: [{\n                squareMap: Array(9).fill(null),\n            }],\n            xIsNext: true,\n        };\n    }\n    render() {\n        return (\n            <div className=\"game\">\n            <div className=\"game-board\">\n            <Board />\n            </div>\n            <div className=\"game-info\">\n            <div>{/* status */}</div>\n            <ol>{/* TODO */}</ol>\n            </div>\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}